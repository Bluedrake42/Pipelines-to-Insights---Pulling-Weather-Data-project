import streamlit as st
import pandas as pd
import openmeteo_requests
import requests_cache
from retry_requests import retry

# Setup API session
cache_session = requests_cache.CachedSession('.cache', expire_after=3600)
retry_session = retry(cache_session, retries=5, backoff_factor=0.2)
openmeteo = openmeteo_requests.Client(session=retry_session)

# Call API with metric units
params = {
    "latitude": 38.2469,
    "longitude": 85.7664,
    "hourly": ["temperature_2m", "rain", "relative_humidity_2m", "visibility", "wind_speed_10m"],
    "timezone": "auto",
    "wind_speed_unit": "kmh",
    "temperature_unit": "celsius"
}
response = openmeteo.weather_api("https://api.open-meteo.com/v1/forecast", params=params)[0]

# Extract data
hourly = response.Hourly()
hourly_data = {
    "date": pd.date_range(
        start=pd.to_datetime(hourly.Time(), unit="s", utc=True),
        end=pd.to_datetime(hourly.TimeEnd(), unit="s", utc=True),
        freq=pd.Timedelta(seconds=hourly.Interval()),
        inclusive="left"
    ),
    "temperature_c": hourly.Variables(0).ValuesAsNumpy(),
    "rain": hourly.Variables(1).ValuesAsNumpy(),
    "relative_humidity": hourly.Variables(2).ValuesAsNumpy(),
    "visibility": hourly.Variables(3).ValuesAsNumpy(),
    "wind_speed_kmh": hourly.Variables(4).ValuesAsNumpy()
}
df = pd.DataFrame(hourly_data)

# Convert units
df["temperature_f"] = df["temperature_c"] * 9 / 5 + 32
df["wind_speed_mph"] = df["wind_speed_kmh"] * 0.621371

# UI
st.title("🌤️ Louisville, KY Weather")
st.markdown("Hourly forecast from Open-Meteo API")

# Charts
st.subheader("Temperature (°F)")
st.line_chart(df.set_index("date")["temperature_f"])

st.subheader("Wind Speed (mph)")
st.line_chart(df.set_index("date")["wind_speed_mph"])

st.subheader("Rain (mm)")
st.line_chart(df.set_index("date")["rain"])

st.subheader("Humidity (%)")
st.line_chart(df.set_index("date")["relative_humidity"])

st.subheader("Visibility (m)")
st.line_chart(df.set_index("date")["visibility"])

# Raw Data Table
st.dataframe(df[["date", "temperature_f", "wind_speed_mph", "rain", "relative_humidity", "visibility"]].tail(10))
